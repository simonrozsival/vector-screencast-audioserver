{"version":3,"sources":["webpack:///webpack/bootstrap 06ebca5271390c69a2b1","webpack:///./src/AudioRecording.ts","webpack:///external \"ws\"","webpack:///external \"wav\"","webpack:///external \"fs\"","webpack:///external \"node-uuid\"","webpack:///external \"colors\"","webpack:///./src/AudioConvertor.ts","webpack:///external \"child_process\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;+BCpCgC,CAAI;;gCAChB,CAAK;;+BACL,CAAI;;KAAZ,EAAE;;qCACO,CAAW;;mCACT,CAAQ;;2CACX,CAAkB;;;;KACjB,MAAM;AACZ,cADM,MAAM,CACX,GAAG,EAAE;+BADA,MAAM;;AAEnB,aAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,aAAI,CAAC,GAAG,CAAC,IAAI,EACT,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC;AACrB,aAAI,CAAC,GAAG,CAAC,SAAS,EACd,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;AAC9B,aAAI,CAAC,GAAG,CAAC,OAAO,EACZ,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACjC,aAAI,CAAC,MAAM,GAAG,GAAG,CAAC;MACrB;;kBAVgB,MAAM;;gBAWlB,iBAAG;;;AACJ,iBAAI,CAAC,MAAM,GAAG,wBAAoB;AAC9B,qBAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI;cACzB,CAAC,CAAC;AACH,iBAAI,IAAI,CAAC,MAAM,EAAE;AACb,wBAAO,CAAC,GAAG,CAAC,eAAO,MAAM,sDAAoD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAG,CAAC,CAAC;cACrG,MACI;AACD,wBAAO,CAAC,GAAG,CAAC,eAAO,GAAG,CAAC,sCAAsC,CAAC,CAAC,CAAC;cACnE;AACD,iBAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,MAAM;wBAAK,MAAK,YAAY,CAAC,MAAM,CAAC;cAAA,CAAC,CAAC;AACpE,iBAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK;wBAAK,OAAO,CAAC,GAAG,aAAW,KAAK,CAAG;cAAA,CAAC,CAAC;UACtE;;;gBACW,sBAAC,MAAM,EAAE;;;AACjB,iBAAI;AACA,wBAAO,CAAC,GAAG,CAAC,eAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;AAChD,qBAAI,UAAU,GAAG,IAAI,CAAC;AACtB,qBAAI,KAAK,GAAG,IAAI,CAAC;AACjB,qBAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AAC5D,qBAAI,sBAAsB,GAAG,KAAK,CAAC;AACnC,uBAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,OAAO,EAAE,KAAK,EAAK;AACrC,yBAAI,sBAAsB,KAAK,KAAK,EAAE;AAClC,6BAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACf,iCAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC9B,iCAAI,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;AAC/B,2CAAU,GAAG,OAAK,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;8BAC9C,MACI,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,KAAK,EAAE;AAClC,uDAAsB,GAAG,IAAI,CAAC;AAC9B,wCAAK,eAAe,CAAC,OAAK,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,OAAK,GAAG,CAAC,SAAS,CAAC,CAAC;8BACzF,MACI;AACD,wCAAO,CAAC,GAAG,CAAC,eAAO,GAAG,CAAC,qBAAqB,CAAC,EAAE,OAAO,CAAC,CAAC;8BAC3D;0BACJ,MACI;AACD,iCAAI,CAAC,CAAC,UAAU,EAAE;AACd,2CAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;8BAClC,MACI;AACD,wCAAO,CAAC,GAAG,CAAC,eAAO,GAAG,CAAC,wEAAwE,CAAC,CAAC,CAAC;AAClG,uCAAM,CAAC,KAAK,EAAE,CAAC;8BAClB;0BACJ;sBACJ;kBACJ,CAAC,CAAC;AACH,uBAAM,CAAC,EAAE,CAAC,OAAO,EAAE,YAAM;AACrB,4BAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAC7B,yBAAI,CAAC,sBAAsB,EAAE;AACzB,6BAAI,UAAU,KAAK,IAAI,EAAE;AACrB,uCAAU,CAAC,GAAG,EAAE,CAAC;AACjB,+BAAE,CAAC,MAAM,CAAC,IAAI,EAAE,UAAC,GAAG,EAAK;AACrB,qCAAI,GAAG,EAAE;AACL,4CAAO,CAAC,GAAG,CAAC,eAAO,GAAG,iCAA8B,IAAI,CAAG,CAAC,CAAC;AAC7D,4CAAO;kCACV;AACD,wCAAO,CAAC,GAAG,CAAC,eAAO,MAAM,eAAa,IAAI,8DAA2D,CAAC,CAAC;8BAC1G,CAAC,CAAC;0BACN;sBACJ;kBACJ,CAAC,CAAC;cACN,CACD,OAAO,CAAC,EAAE;AACN,wBAAO,CAAC,GAAG,CAAC,eAAO,GAAG,CAAC,8EAA8E,CAAC,EAAE,CAAC,CAAC,CAAC;cAC9G;UACJ;;;gBACY,uBAAC,IAAI,EAAE,GAAG,EAAE;AACrB,oBAAO,CAAC,GAAG,CAAC,eAAO,IAAI,CAAC,8BAA8B,CAAC,GAAG,IAAI,CAAC,CAAC;AAChE,iBAAI,UAAU,GAAG,IAAI,SAAI,UAAU,CAAC,IAAI,EAAE;AACtC,yBAAQ,EAAE,GAAG,CAAC,QAAQ,IAAI,CAAC;AAC3B,2BAAU,EAAE,GAAG,CAAC,UAAU,IAAI,KAAK;AACnC,yBAAQ,EAAE,GAAG,CAAC,QAAQ,IAAI,EAAE;cAC/B,CAAC,CAAC;AACH,oBAAO,UAAU,CAAC;UACrB;;;gBACc,yBAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE;AAC3D,uBAAU,CAAC,GAAG,EAAE,CAAC;AACjB,uBAAU,GAAG,IAAI,CAAC;AAClB,iBAAI,CAAC,YAAY,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,OAAO,EAAE;AAClD,qBAAI,CAAC,CAAC,MAAM,EAAE;AACV,0BAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,gCAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;sBAC9C;AACD,2BAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AACvB,8BAAK,EAAE,KAAK;AACZ,8BAAK,EAAE,OAAO;sBACjB,CAAC,CAAC,CAAC;kBACP,MACI;AACD,4BAAO,CAAC,GAAG,CAAC,eAAO,GAAG,CAAC,qDAAqD,CAAC,CAAC,CAAC;kBAClF;AACD,uBAAM,CAAC,KAAK,EAAE,CAAC;cAClB,CAAC,CAAC;UACN;;;gBACc,yBAAC,GAAG,EAAE,GAAG,EAAE;AACtB,gBAAG,GAAG,GAAG,IAAI,IAAI,CAAC;AAClB,gBAAG,GAAG,GAAG,IAAI,EAAE,CAAC;AAChB,oBAAU,GAAG,SAAI,eAAK,EAAE,EAAE,GAAG,GAAG,CAAG;UACtC;;;gBACW,sBAAC,KAAK,EAAE,SAAS,EAAE,QAAO,EAAE;AACpC,8CAAQ;AACJ,sBAAK,EAAE,KAAK;AACZ,wBAAO,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO;AACzB,wBAAO,EAAE,EAAE;AACX,2BAAU,EAAE,UAAU;AACtB,0BAAS,EAAE,aAAa;AACxB,yBAAQ,EAAE,CAAC;AACX,sBAAK,EAAE,KAAK;AACZ,wBAAO,EAAE,iBAAU,KAAK,EAAE;AACtB,yBAAI,eAAe,GAAG,CAAC;AACf,4BAAG,EAAE,KAAK;AACV,6BAAI,EAAE,WAAW;sBACpB,CAAC,CAAC;AACP,yBAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAClB,6BAAI,SAAS,EAAE;AACX,+BAAE,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,GAAG,EAAE;AAC5B,qCAAI,GAAG,EAAE;AACL,4CAAO,CAAC,GAAG,CAAC,eAAO,GAAG,iCAA8B,KAAK,CAAG,CAAC,CAAC;AAC9D,4CAAO;kCACV;AACD,wCAAO,CAAC,GAAG,CAAC,eAAO,KAAK,eAAa,KAAK,kBAAe,CAAC,CAAC;8BAC9D,CAAC,CAAC;AACH,4CAAe,GAAG,KAAK,CAAC;0BAC3B,MACI;AACD,4CAAe,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;0BACnD;sBACJ;AACD,yBAAI,QAAO,EAAE;AACT,iCAAO,CAAC,eAAe,CAAC,CAAC;sBAC5B;kBACJ;AACD,sBAAK,EAAE,iBAAY;AACf,4BAAO,CAAC,GAAG,CAAC,eAAO,GAAG,oDAAkD,IAAI,CAAC,GAAG,CAAC,OAAO,CAAG,CAAC,CAAC;kBAChG;cACJ,CAAC,CAAC;UACN;;;YAnJgB,MAAM;;;sBAAN,MAAM;;;;;;;;ACR3B,gC;;;;;;ACAA,iC;;;;;;ACAA,gC;;;;;;ACAA,uC;;;;;;ACAA,oC;;;;;;;;;;;;sBCGwB,OAAO;;0CAFT,CAAe;;mCACd,CAAQ;;AAChB,UAAS,OAAO,CAAC,GAAG,EAAE;AACjC,SAAI,GAAG,KAAK,SAAS,EAAE;AACnB,gBAAO,CAAC,GAAG,CAAC,eAAO,GAAG,CAAC,gDAAgD,CAAC,CAAC,CAAC;AAC1E,gBAAO,KAAK,CAAC;MAChB;AACD,SAAI,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;AAC9B,gBAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;AACpE,gBAAO,KAAK,CAAC;MAChB;AACD,SAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D,SAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,SAAI,SAAS,GAAG,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC;AACvD,SAAI,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,SAAI,IAAI,GAAG,CAAC,CAAC;AACb,SAAI,UAAU,GAAG,EAAE,CAAC;AACpB,SAAI,KAAK,GAAG,GAAG,CAAC,KAAK,KAAK,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;AACvD,SAAI,WAAW,GAAI,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,SAAS,GAAK,GAAG,CAAC,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,GACjH,IAAI,CAAC;AACX,UAAK,IAAI,CAAC,IAAI,OAAO,EAAE;AACnB,aAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB,kBAAS,CAAC,GAAG,EAAE,SAAS,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,UAAC,GAAG,EAAK;AACrE,uBAAU,CAAC,IAAI,CAAC;AACZ,oBAAG,EAAK,GAAG,CAAC,SAAS,SAAI,IAAI,SAAI,GAAK;AACtC,qBAAI,aAAW,GAAK;cACvB,CAAC,CAAC;AACH,iBAAI,EAAE,IAAI,KAAK,OAAO,CAAC,MAAM,EAAE;AAC3B,qBAAI,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AAC/B,wBAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;kBAC3B;cACJ;UACJ,EAAE,UAAC,GAAG,EAAK;AACR,iBAAI,EAAE,IAAI,KAAK,OAAO,CAAC,MAAM,EAAE;AAC3B,qBAAI,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AAC/B,wBAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;kBAC3B;cACJ;UACJ,CAAC,CAAC;MACN;EACJ;;AACD,UAAS,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;AACnE,SAAI,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AAC9B,YAAO,CAAC,GAAG,CAAC,eAAO,IAAI,wBAAsB,GAAG,CAAC,KAAK,YAAO,MAAM,OAAI,CAAC,CAAC;AACzE,SAAI,MAAM,GAAG,0BAAM,QAAQ,EAAE,CACzB,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,EAC1B,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,GAAG,EACrC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,IAAI,EACrC,WAAW,EAAE,KAAK,GAAG,SAAS,GAAG,OAAO,EACxC,WAAW,EACX,MAAM,CACT,CAAC,CAAC;AACH,WAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAI,EAAK;AACxB,aAAI,IAAI,KAAK,CAAC,EAAE;AACZ,oBAAO,CAAC,GAAG,CAAC,eAAO,IAAI,OAAK,eAAO,KAAK,CAAC,IAAI,CAAC,UAAK,GAAG,CAAG,CAAC,CAAC;AAC3D,oBAAO,CAAC,GAAG,CAAC,CAAC;UAChB,MACI;AACD,oBAAO,CAAC,GAAG,CAAC,eAAO,IAAI,OAAK,eAAO,GAAG,CAAC,IAAI,CAAC,UAAK,GAAG,CAAG,CAAC,CAAC;AACzD,kBAAK,CAAC,GAAG,CAAC,CAAC;UACd;MACJ,CAAC,CAAC;AACH,WAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,GAAG,EAAK;AAC9B,gBAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;MACtC,CAAC,CAAC;EACN;;;;;;;AClED,2C","file":"audio-server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 06ebca5271390c69a2b1\n **/","/// <reference path='../typings/node/node.d.ts' />\n/// <reference path='./node-libs.d.ts' />\nimport { WebSocketServer } from 'ws';\nimport { Wav } from 'wav';\nimport * as fs from 'fs';\nimport { uuid } from 'node-uuid';\nimport { colors } from 'colors';\nimport convert from './AudioConvertor';\nexport default class Server {\n    constructor(cfg) {\n        this.cfg = cfg;\n        if (!cfg.port)\n            cfg.port = 45678;\n        if (!cfg.outputDir)\n            cfg.outputDir = __dirname;\n        if (!cfg.formats)\n            cfg.formats = ['mp3', 'ogg'];\n        this.config = cfg;\n    }\n    Start() {\n        this.server = new WebSocketServer({\n            port: this.config.port\n        });\n        if (this.server) {\n            console.log(colors.yellow(`Audio recorder is running and listening on port ${this.config.port}`));\n        }\n        else {\n            console.log(colors.red('Audio recorder could not be started.'));\n        }\n        this.server.on('connection', (socket) => this.HandleClient(socket));\n        this.server.on('error', (error) => console.log(`ERROR: ${error}`));\n    }\n    HandleClient(socket) {\n        try {\n            console.log(colors.blue('Handling new client'));\n            var fileWriter = null;\n            var $this = this;\n            var name = this.GetTempFileName(this.cfg.outputDir, '.wav');\n            var recordingEndedProperly = false;\n            socket.on('message', (message, flags) => {\n                if (recordingEndedProperly === false) {\n                    if (!flags.binary) {\n                        var msg = JSON.parse(message);\n                        if (!!msg && msg.type === 'start') {\n                            fileWriter = this.InitRecording(name, msg);\n                        }\n                        else if (!!msg && msg.type === 'end') {\n                            recordingEndedProperly = true;\n                            this.FinishRecording(this.cfg.hostName, name, fileWriter, socket, this.cfg.deleteWav);\n                        }\n                        else {\n                            console.log(colors.red('Unsupported message'), message);\n                        }\n                    }\n                    else {\n                        if (!!fileWriter) {\n                            fileWriter.file.write(message);\n                        }\n                        else {\n                            console.log(colors.red('Binary data can\\'t be accepted - initialisation wasn\\'t done properly.'));\n                            socket.close();\n                        }\n                    }\n                }\n            });\n            socket.on('close', () => {\n                console.log('stream closed');\n                if (!recordingEndedProperly) {\n                    if (fileWriter !== null) {\n                        fileWriter.end();\n                        fs.unlink(name, (err) => {\n                            if (err) {\n                                console.log(colors.red(`Can't delete tmp wav file ${name}`));\n                                return;\n                            }\n                            console.log(colors.yellow(`Tmp file ${name} was deleted as stream was closed and not ended properly`));\n                        });\n                    }\n                }\n            });\n        }\n        catch (e) {\n            console.log(colors.red('A fatal error occured while serving a client. Recording session was aborted.'), e);\n        }\n    }\n    InitRecording(name, msg) {\n        console.log(colors.gray('initialising streaming into ') + name);\n        var fileWriter = new Wav.FileWriter(name, {\n            channels: msg.channels || 1,\n            sampleRate: msg.sampleRate || 48000,\n            bitDepth: msg.bitDepth || 16\n        });\n        return fileWriter;\n    }\n    FinishRecording(hostName, name, fileWriter, socket, deleteWav) {\n        fileWriter.end();\n        fileWriter = null;\n        this.TryConvertTo(name, deleteWav, function (results) {\n            if (!!socket) {\n                for (var i = 0; i < results.length; i++) {\n                    results[i].url = hostName + results[i].url;\n                }\n                socket.send(JSON.stringify({\n                    error: false,\n                    files: results\n                }));\n            }\n            else {\n                console.log(colors.red('Can\\'t report the result - socket is already closed'));\n            }\n            socket.close();\n        });\n    }\n    GetTempFileName(dir, ext) {\n        dir = dir || './';\n        ext = ext || '';\n        return `${dir}/${uuid.v4()}${ext}`;\n    }\n    TryConvertTo(input, deleteWav, success) {\n        convert({\n            input: input,\n            formats: this.cfg.formats,\n            quality: 64,\n            publicRoot: './public',\n            outputDir: '/recordings',\n            channels: 1,\n            debug: false,\n            success: function (files) {\n                var resultFileNames = [{\n                        url: input,\n                        type: 'audio/wav'\n                    }];\n                if (files.length > 0) {\n                    if (deleteWav) {\n                        fs.unlink(input, function (err) {\n                            if (err) {\n                                console.log(colors.red(`Can't delete tmp wav file ${input}`));\n                                return;\n                            }\n                            console.log(colors.green(`Tmp file ${input} was deleted`));\n                        });\n                        resultFileNames = files;\n                    }\n                    else {\n                        resultFileNames = resultFileNames.concat(files);\n                    }\n                }\n                if (success) {\n                    success(resultFileNames);\n                }\n            },\n            error: function () {\n                console.log(colors.red(`Error while converting the result from wav to ${this.cfg.formats}`));\n            }\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/ts-loader!./src/AudioRecording.ts\n **/","module.exports = require(\"ws\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ws\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"wav\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"wav\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"node-uuid\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"node-uuid\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"colors\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"colors\"\n ** module id = 5\n ** module chunks = 0\n **/","/// <refenrece path=\"../typings/tsd.d.ts\" />\nimport { spawn } from 'child_process';\nimport { colors } from 'colors';\nexport default function convert(cfg) {\n    if (cfg === undefined) {\n        console.log(colors.red(\"Audio Converted Error - No information passed.\"));\n        return false;\n    }\n    if (!cfg.hasOwnProperty(\"input\")) {\n        console.log(\"Audio Converter Error - No input filename specified.\");\n        return false;\n    }\n    var name = cfg.input.substr(cfg.input.lastIndexOf(\"/\") + 1);\n    name = name.substr(0, name.lastIndexOf(\".\"));\n    var outputDir = cfg.publicRoot + cfg.outputDir || \"./\";\n    var formats = cfg.formats || [\"mp3\"];\n    var done = 0;\n    var successful = [];\n    var debug = cfg.debug === undefined ? true : cfg.debug;\n    var overrideArg = (cfg.hasOwnProperty(\"override\") && cfg.override !== undefined) ? (cfg.override === true ? \"-y\" : \"-n\")\n        : \"-y\";\n    for (var i in formats) {\n        var ext = formats[i];\n        convertTo(cfg, outputDir + \"/\" + name, ext, overrideArg, debug, (ext) => {\n            successful.push({\n                url: `${cfg.outputDir}/${name}.${ext}`,\n                type: `audio/${ext}`\n            });\n            if (++done === formats.length) {\n                if (cfg.hasOwnProperty(\"success\")) {\n                    cfg.success(successful);\n                }\n            }\n        }, (ext) => {\n            if (++done === formats.length) {\n                if (cfg.hasOwnProperty(\"success\")) {\n                    cfg.success(successful);\n                }\n            }\n        });\n    }\n}\nfunction convertTo(cfg, name, ext, overrideArg, debug, success, error) {\n    var output = name + \".\" + ext;\n    console.log(colors.gray(`Trying to convert ${cfg.input} to ${output}.`));\n    var ffmpeg = spawn(\"ffmpeg\", [\n        \"-i\", cfg.input.toString(),\n        \"-ac\", cfg.channels.toString() || \"1\",\n        \"-ab\", cfg.quality.toString() || \"64\",\n        \"-loglevel\", debug ? \"verbose\" : \"quiet\",\n        overrideArg,\n        output\n    ]);\n    ffmpeg.on(\"exit\", (code) => {\n        if (code === 0) {\n            console.log(colors.gray(`[${colors.green(\"OK\")}] ${ext}`));\n            success(ext);\n        }\n        else {\n            console.log(colors.gray(`[${colors.red(\"XX\")}] ${ext}`));\n            error(ext);\n        }\n    });\n    ffmpeg.stderr.on(\"data\", (err) => {\n        console.log(\"FFmpeg err: %s\", err);\n    });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/ts-loader!./src/AudioConvertor.ts\n **/","module.exports = require(\"child_process\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"child_process\"\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}